<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>net.company</groupId>
    <artifactId>tynamo-test-webapp</artifactId>
    <version>0.1</version>
    <packaging>war</packaging>
    <name>Secured web application access with Apache Tapestry 5.4-beta-24 and Tynamo/tapestry-security 0.6.2 (Shiro 1.2.3)</name>
    <dependencies>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.2</version>
        </dependency>
       <!--
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>1.51</version>
        </dependency>
        -->
        <!--
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.176</version>
        </dependency> -->

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-core</artifactId>
            <version>${tapestry.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-ioc</artifactId>
            <version>${tapestry.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-webresources</artifactId>
            <version>${tapestry.version}</version>
        </dependency>

        <!--
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-annotations</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>provided</scope>
        </dependency>  -->

        <!--
        <exclusions>
            <exclusion>
                <groupId>org.apache.tapestry</groupId>
                <artifactId>tapestry-upload</artifactId>
            </exclusion>
        </exclusions> -->

        <!-- http://tynamo.org/tapestry-security+guide -->
        <dependency>
            <groupId>org.tynamo</groupId>
            <artifactId>tapestry-security</artifactId>
            <version>0.6.2</version>
        </dependency>

        <!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests)
will fail, preventing Maven from packaging the WAR. Tapestry includes a large number
of testing facilities designed for use with TestNG (http://testng.org/), so it's recommended. -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.12.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>2.5.2</version>
            <scope>test</scope>
        </dependency>

      <!--  <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-test</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>test</scope>
        </dependency>  -->

        <!-- Provided by the servlet container, but sometimes referenced in the application code.
       http://www.eclipse.org/jetty/about.php#Versions
       -->
        <!-- javax.servlet.UnavailableException: org.apache.tapestry5.TapestryFilter -->
            <!--
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
        </dependency>  -->

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>webapp</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <optimize>false</optimize>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.5</version>
            </plugin>

            <!-- Run the application using "mvn jetty:run"
               and browse: https://localhost:8443/tynamo-test-webapp/

               Java 1.7 is required, if not it fails:

               http://stackoverflow.com/questions/15567514/unsupported-major-minor-version-51-0-but-everything-is-set-to-jdk-1-6

               Caused by: java.lang.UnsupportedClassVersionError:
               org/eclipse/jetty/maven/plugin/JettyRunMojo : Unsupported major.minor version 51.0

                http://code.google.com/p/googleappengine/issues/detail?id=6768
            -->

        <plugin>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>9.2.6.v20141205</version>
            <configuration>
                <reload>automatic</reload>
                <scanIntervalSeconds>4</scanIntervalSeconds>
                <stopPort>9999</stopPort>
                <stopKey>key</stopKey>
                <!--
                 http://git.eclipse.org/c/jetty/org.eclipse.jetty.project.git/tree/jetty-server/src/main/config/etc/
                 http://git.eclipse.org/c/jetty/org.eclipse.jetty.project.git/tree/examples/embedded/src/main/java/org/eclipse/jetty/embedded/LikeJettyXml.java
                 -->
                <jettyXml>src/main/jetty/jetty.xml,src/main/jetty/jetty-http.xml,src/main/jetty/jetty-ssl.xml,src/main/jetty/jetty-https.xml</jettyXml>
              </configuration>
          </plugin>

            <!-- tomcat6:run
               http://tomcat.apache.org/maven-plugin-2.1/tomcat6-maven-plugin/
               -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat6-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- application path always starts with /-->
                    <path>/</path>
                    <pluginArtifacts></pluginArtifacts>
                    <additionalConfigFilesDir>${basedir}/src/main/tomcat/conf</additionalConfigFilesDir>
                    <contextReloadable>true</contextReloadable>
                    <backgroundProcessorDelay>5</backgroundProcessorDelay>
                    <port>8080</port>
                    <httpsPort>8443</httpsPort>
                    <keystoreFile>${basedir}/jetty-ssl.keystore</keystoreFile>
                    <password>jetty88</password>
                    <keystorePass>jetty88</keystorePass>
                    <!-- <keystoreType></keystoreType> -->
                </configuration>
            </plugin>

            <!-- tomcat7:run
               http://tomcat.apache.org/maven-plugin-2.1/tomcat7-maven-plugin/
               -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- application path always starts with /-->
                    <path>/</path>
                    <pluginArtifacts></pluginArtifacts>
                    <!-- <additionalConfigFilesDir>${basedir}/src/main/tomcat/conf</additionalConfigFilesDir>  -->
                    <contextReloadable>true</contextReloadable>
                    <backgroundProcessorDelay>5</backgroundProcessorDelay>
                    <port>8080</port>
                    <httpsPort>8443</httpsPort>
                    <keystoreFile>${basedir}/jetty-ssl.keystore</keystoreFile>
                    <password>jetty88</password>
                    <keystorePass>jetty88</keystorePass>
                    <!-- <keystoreType></keystoreType> -->
                </configuration>
            </plugin>
         <!--   <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> -->
            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>3.4</version>
            <dependencies>
                <dependency>
                    <groupId>org.apache.maven.doxia</groupId>
                    <artifactId>doxia-module-markdown</artifactId>
                    <version>1.5</version>
                </dependency>
            </dependencies>
            <configuration>
                <skipDeploy>true</skipDeploy>
                    <reportPlugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-project-info-reports-plugin</artifactId>
                            <version>2.7</version>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>index</report>
                                        <report>summary</report>
                                        <report>license</report>
                                        <report>help</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-plugin-plugin</artifactId>
                            <version>3.2</version>
                            <configuration>
                                <goalPrefix>dependency-check</goalPrefix>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>2.9.1</version>
                            <reportSets>
                                <reportSet>
                                    <id>default</id>
                                    <reports>
                                        <report>javadoc</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>versions-maven-plugin</artifactId>
                            <version>2.1</version>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>dependency-updates-report</report>
                                        <report>plugin-updates-report</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting/>

    <!--
    http://active-active.blogspot.be/2011/04/maven-note-securing-temporary-jetty.html
    http://stackoverflow.com/questions/3794892/howto-use-https-ssl-with-maven-mortbay-jetty-plugin
    http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-key-pairs-and-certificates
    -->
    <profiles>
        <profile>
            <id>keytool</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>keytool-maven-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <id>clean</id>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                            <execution>
                                <phase>generate-resources</phase>
                                <id>genkey</id>
                                <goals>
                                    <goal>generateKeyPair</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- <keystore>${project.build.directory}/webapp/WEB-INF/jetty-ssl.keystore</keystore>  -->
                            <keystore>${basedir}/jetty-ssl.keystore</keystore>
                            <!-- <keystore>${basedir}/src/main/webapp/WEB-INF/jetty-ssl.keystore</keystore> --><!-- jetty9 -->
                            <dname>cn=localhost</dname><!-- put your CN here-->
                            <!-- <dname>cn=myserverhostname.mydomain.tld</dname> --><!-- put your CN here-->
                            <keypass>jetty88</keypass>
                            <storepass>jetty88</storepass>
                            <alias>jetty88</alias>
                            <keyalg>RSA</keyalg>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <!-- This repository is only needed when the Tapestry version is a preview release, rather
             than a final release. -->
       <repository>
            <id>apache-staging</id>
            <url>https://repository.apache.org/content/groups/staging</url>
        </repository>
    </repositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.6</java.version>
        <!-- http://maven.apache.org/plugins/maven-resources-plugin/examples/binaries-filtering.html -->
         <tapestry.version>5.4-beta-24</tapestry.version>
    </properties>
</project>
